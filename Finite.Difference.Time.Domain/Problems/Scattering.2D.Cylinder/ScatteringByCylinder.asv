% FDTD example 3.7 from Numerical techniques in
Electromagnetics by Sadiku.
% Main m file for the FDTD simulation.
clc
clear all
% Simulation related parameters.
IHx = 50;
JHx = 49;
IHy = 51;
JHy = 50;
IEz = 50;
JEz = 50;
NMax = 2; NNMax = 500; % Maximum time.
NHW = 40; % One half wave cycle.
Med = 2; % No of different media.
Js = 2; % J-position of the plane wave front.
% Different Constants.
delta = 3e-3;
Cl = 3e8;
f = 2.5e9;
pi = 3.141592654;
e0 = (1e-9) / (36*pi);
u0 = (1e-7) * 4 * pi;
DT = delta / ( 2 * Cl );
TwoPIFDeltaT = 2 * pi * f * DT;
% Data arrays.
CHx = zeros ( IHx, JHx ); % Conductance
CHy = zeros ( IHy, JHy ); % Conductance
REz = zeros ( IEz, JEz ); % Impedance
RaEz = zeros ( IEz, JEz ); % Scaling parameter dependent on material conductivity.
Hx = zeros ( IHx, JHx, NNMax );
Hy = zeros ( IHy, JHy, NNMax );
Ez = zeros ( IEz, JEz, NNMax );
AbsEz = zeros ( IEz, JEz ); % Absolute value of Ez for steady state solution

% ############ Initialization #############
fprintf ( 1, 'Initializing' );
fprintf ( 1, '.' );
% Initializing the eta and 1/eta arrays.
for i=1:IHx
for j=1:JHx
CHx ( i, j ) = DT / ( u0 * ur ( i, j-0.5 ) * delta );
end
end
fprintf ( 1, '.' );
for i=1:IHy
for j=1:JHy
CHy ( i, j ) = DT / ( u0 * ur ( i-0.5, j-1 ) * delta );
end
end
fprintf ( 1, '.' );
for i=1:IEz
for j=1:JEz
REz ( i, j ) = DT / ( e0 * er ( i, j-0.5 ) * delta );
RaEz ( i, j ) = ( 1 - ( s(i, j-0.5) * DT )/( e0 * er
( i, j-0.5 ) ) );
end
end
fprintf ( 1, 'done.\n' );
% ############ Initialization Complete ##############
% ########### 2. Now running the Simulation #############
fprintf ( 1, 'Simulation started... \n', 0 );
for n=0:498
fprintf ( 1, '%g %% \n', (n*100)/500 );
% *** Calculation of Magnetic Field Components ***
% * Calculation of Hx.
Hx ( :, :, n+2 ) = Hx ( :, :, n+1 ) + ( CHx .* ( Ez ( :,
1:JHx, n+1 ) - Ez ( :, 2:JHx+1, n+1 ) ));
% * Calculation of Hy.
Hy ( 2:IHy-1, :, n+2 ) = Hy ( 2:IHy-1, :, n+1 ) + ( CHy
( 2:IHy-1, : ) .* ( Ez ( 2:IHy-1, :, n+1 ) - Ez ( 1:IHy-2, :,
n+1 ) ));
% Boundary conditions on Hy. Soft grid truncation.